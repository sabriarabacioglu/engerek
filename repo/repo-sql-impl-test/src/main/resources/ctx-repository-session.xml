<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2013 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
       default-lazy-init="true" default-autowire="byName">

    <bean id="testC3p0DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" lazy-init="true"
          destroy-method="close">
        <property name="driverClass" value="#{testSqlRepositoryFactory.sqlConfiguration.driverClassName}"/>
        <property name="jdbcUrl" value="#{testSqlRepositoryFactory.sqlConfiguration.jdbcUrl}"/>
        <property name="user" value="#{testSqlRepositoryFactory.sqlConfiguration.jdbcUsername}"/>
        <property name="password" value="#{testSqlRepositoryFactory.sqlConfiguration.jdbcPassword}"/>

        <property name="acquireIncrement" value="3"/>
        <property name="minPoolSize" value="#{testSqlRepositoryFactory.sqlConfiguration.minPoolSize}"/>
        <property name="maxPoolSize" value="#{testSqlRepositoryFactory.sqlConfiguration.maxPoolSize}"/>
        <property name="idleConnectionTestPeriod" value="1800"/>
        <property name="connectionTesterClassName" value="com.evolveum.midpoint.repo.sql.util.MidPointConnectionTester" />
        <property name="connectionCustomizerClassName"
                  value="com.evolveum.midpoint.repo.sql.util.MidPointConnectionCustomizer"/>
    </bean>

    <bean id="testJndiDataSource" class="org.springframework.jndi.JndiObjectFactoryBean" lazy-init="true">
        <property name="jndiName" value="#{testSqlRepositoryFactory.sqlConfiguration.dataSource}"/>
    </bean>

    <bean name="testSqlDataSource" class="com.evolveum.midpoint.repo.sql.CompositeDataSource" lazy-init="true">
        <property name="configuration" value="#{testSqlRepositoryFactory.sqlConfiguration}"/>
        <property name="testing" value="true"/>
    </bean>

    <!-- Hibernate session factory -->
    <bean id="testSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
          depends-on="testSqlDataSource" lazy-init="true">

        <property name="dataSource" value="#{testSqlDataSource.dataSource}" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">#{testSqlRepositoryFactory.sqlConfiguration.hibernateDialect}</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">#{testSqlRepositoryFactory.sqlConfiguration.hibernateHbm2ddl}</prop>
                <prop key="hibernate.id.new_generator_mappings">true</prop>
            </props>
        </property>
        <property name="namingStrategy">
            <bean class="com.evolveum.midpoint.repo.sql.util.MidPointNamingStrategy"/>
        </property>
        <property name="annotatedPackages">
            <list>
                <value>com.evolveum.midpoint.repo.sql.type</value>
            </list>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.evolveum.midpoint.repo.sql.data.common</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.any</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.container</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.embedded</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.enums</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.id</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.other</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.type</value>
                <value>com.evolveum.midpoint.repo.sql.data.audit</value>
            </list>
        </property>
    </bean>
</beans>