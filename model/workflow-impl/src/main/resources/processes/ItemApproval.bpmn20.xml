<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2013 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:activiti="http://activiti.org/bpmn"
             xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
             xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://evolveum.com/midpoint" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <process id="ItemApproval" name="General multi-level item approval process" isExecutable="true">
        <extensionElements>
            <activiti:executionListener event="end" class="com.evolveum.midpoint.wf.impl.processes.common.MidPointProcessListener" />
        </extensionElements>


        <!-- This process takes care of approving "something" - an item to approve.

           Input variables:
             - approvalRequest (ApprovalRequest): data structure describing the item to be approved and (possibly multi-level) schema of the approval process
             - approvalTaskName (String): name of the approval task (e.g. "Approve adding role R to user U")

           Output variables:
             - wfAnswer (Soolean: __APPROVED__ / __REJECTED__-or-null): whether the item was approved or not
             (in the future we may accept a set of deltas to be directly applied)
        -->

        <startEvent id="start" name="Start" />
        <sequenceFlow sourceRef="start" targetRef="start.1" />

        <serviceTask id="start.1" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
        <sequenceFlow sourceRef="start.1" targetRef="initializeLoopThroughLevels" />

        <serviceTask id="initializeLoopThroughLevels" activiti:class="com.evolveum.midpoint.wf.impl.processes.itemApproval.InitializeLoopThroughLevels" />
        <sequenceFlow sourceRef="initializeLoopThroughLevels" targetRef="loopLevels" />

        <!-- New variable:
              - loopLevels_stop: whether to stop looping through levels (i.e. when the request is rejected at a particular level)
              - allDecisions (List<Decision>): here all the decisions are recorded
        -->

        <subProcess id="loopLevels">
            <multiInstanceLoopCharacteristics isSequential="true"
                    activiti:collection="${approvalRequest.approvalSchema.levels}" activiti:elementVariable="level">
                <completionCondition>${loopLevels_stop}</completionCondition>
            </multiInstanceLoopCharacteristics>

            <!-- variables:
                  - level: information about particular level of approval (e.g. list of approvers)
            -->

            <startEvent id="loopLevels.start" />
            <sequenceFlow sourceRef="loopLevels.start" targetRef="loopLevels.start.1" />

            <serviceTask id="loopLevels.start.1" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
            <sequenceFlow sourceRef="loopLevels.start.1" targetRef="loopLevels.initializeLoopThroughApprovers" />

            <!-- here we (besides other things) evaluate expressions describing approvers at this level and fill-in approversInLevel - list of references -->
            <serviceTask id="loopLevels.initializeLoopThroughApprovers" activiti:class="com.evolveum.midpoint.wf.impl.processes.itemApproval.InitializeLoopThroughApproversInLevel" />
            <sequenceFlow sourceRef="loopLevels.initializeLoopThroughApprovers" targetRef="loopLevels.shouldBeLevelExecutedQ" />

            <!-- variables:
                  - approversInLevel: list of LightweightObjectRef's for individual approvers
                  - loopApproversInLevel_stop: whether to stop looping through approvers at this level
                  - decisionList: list of decisions done at this level
            -->

            <exclusiveGateway id="loopLevels.shouldBeLevelExecutedQ"/>

            <sequenceFlow sourceRef='loopLevels.shouldBeLevelExecutedQ' targetRef='loopLevels.loopApprovers' >
                <conditionExpression xsi:type="tFormalExpression">
                    ${!loopApproversInLevel_stop}</conditionExpression>
            </sequenceFlow>
            <sequenceFlow sourceRef='loopLevels.shouldBeLevelExecutedQ' targetRef='loopLevels.before.summarizeDecisions' >
                <conditionExpression xsi:type="tFormalExpression">
                    ${loopApproversInLevel_stop}</conditionExpression>
            </sequenceFlow>

            <subProcess id="loopLevels.loopApprovers">
                <multiInstanceLoopCharacteristics isSequential="false"
                                                  activiti:collection="${approversInLevel}" activiti:elementVariable="approverRef">
                    <completionCondition>${loopApproversInLevel_stop}</completionCondition>
                </multiInstanceLoopCharacteristics>

                <!-- variables:
                      - approverRef: reference to an approver
                -->

                <startEvent id="loopLevels.loopApprovers.start" />
                <sequenceFlow sourceRef="loopLevels.loopApprovers.start" targetRef="loopLevels.loopApprovers.start.1" />

                <serviceTask id="loopLevels.loopApprovers.start.1" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
                <sequenceFlow sourceRef="loopLevels.loopApprovers.start.1" targetRef="loopLevels.loopApprovers.prepareApprover" />

                <serviceTask id="loopLevels.loopApprovers.prepareApprover" activiti:class="com.evolveum.midpoint.wf.impl.processes.itemApproval.PrepareApprover" />
                <sequenceFlow sourceRef="loopLevels.loopApprovers.prepareApprover" targetRef="loopLevels.loopApprovers.approve" />

                <exclusiveGateway id="loopLevels.loopApprovers.approve" />

                <sequenceFlow sourceRef='loopLevels.loopApprovers.approve' targetRef='loopLevels.loopApprovers.approve.withGroups' >
                    <conditionExpression xsi:type="tFormalExpression">
                        ${candidateGroups != null}</conditionExpression>
                </sequenceFlow>

                <sequenceFlow sourceRef='loopLevels.loopApprovers.approve' targetRef='loopLevels.loopApprovers.approve.withoutGroups' >
                    <conditionExpression xsi:type="tFormalExpression">
                        ${candidateGroups == null}</conditionExpression>
                </sequenceFlow>

                <userTask id="loopLevels.loopApprovers.approve.withGroups" name="${approvalTaskName}"
                          activiti:candidateGroups="${candidateGroups}">
                    <extensionElements>
                        <activiti:formProperty id="comment" name="01: Your comment" type="string" required="false" readable="true" writable="true"></activiti:formProperty>
                        <activiti:formProperty id="[H]decision" name="decision to be filled-in automatically" type="string" required="false" readable="true" writable="true"></activiti:formProperty>
                        <activiti:taskListener event="create" class="com.evolveum.midpoint.wf.impl.processes.common.MidPointTaskListener" />
                        <activiti:taskListener event="complete" class="com.evolveum.midpoint.wf.impl.processes.common.MidPointTaskListener" />
                    </extensionElements>
                </userTask>

                <userTask id="loopLevels.loopApprovers.approve.withoutGroups" name="${approvalTaskName}"
                          activiti:assignee="${assignee}">
                    <extensionElements>
                        <activiti:formProperty id="comment" name="01: Your comment" type="string" required="false" readable="true" writable="true"></activiti:formProperty>
                        <activiti:formProperty id="[H]decision" name="decision to be filled-in automatically" type="string" required="false" readable="true" writable="true"></activiti:formProperty>
                        <activiti:taskListener event="create" class="com.evolveum.midpoint.wf.impl.processes.common.MidPointTaskListener" />
                        <activiti:taskListener event="complete" class="com.evolveum.midpoint.wf.impl.processes.common.MidPointTaskListener" />
                    </extensionElements>
                </userTask>

                <sequenceFlow sourceRef="loopLevels.loopApprovers.approve.withGroups" targetRef="loopLevels.loopApprovers.recordDecision" />
                <sequenceFlow sourceRef="loopLevels.loopApprovers.approve.withoutGroups" targetRef="loopLevels.loopApprovers.recordDecision" />

                <!-- modifies decisionList, allDecisions, and loopApproversInLevel_stop (if necessary) -->
                <serviceTask id="loopLevels.loopApprovers.recordDecision" activiti:class="com.evolveum.midpoint.wf.impl.processes.itemApproval.RecordIndividualDecision" />
                <sequenceFlow sourceRef="loopLevels.loopApprovers.recordDecision" targetRef="loopLevels.loopApprovers.before.end" />

                <serviceTask id="loopLevels.loopApprovers.before.end" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
                <sequenceFlow sourceRef="loopLevels.loopApprovers.before.end" targetRef="loopLevels.loopApprovers.end" />

                <endEvent id="loopLevels.loopApprovers.end" />
            </subProcess>
            <sequenceFlow sourceRef="loopLevels.loopApprovers" targetRef="loopLevels.before.summarizeDecisions" />

            <serviceTask id="loopLevels.before.summarizeDecisions" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
            <sequenceFlow sourceRef="loopLevels.before.summarizeDecisions" targetRef="loopLevels.summarizeDecisions" />

            <!-- modifies loopLevels_stop, if necessary -->
            <serviceTask id="loopLevels.summarizeDecisions" activiti:class="com.evolveum.midpoint.wf.impl.processes.itemApproval.SummarizeDecisionsInLevel" />
            <sequenceFlow sourceRef="loopLevels.summarizeDecisions" targetRef="loopLevels.end" />

            <endEvent id="loopLevels.end" />
        </subProcess>
        <sequenceFlow sourceRef="loopLevels" targetRef="before.prepareResult"></sequenceFlow>

        <serviceTask id="before.prepareResult" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
        <sequenceFlow sourceRef="before.prepareResult" targetRef="prepareResult"></sequenceFlow>

        <!-- prepares wfAnswer -->
        <serviceTask id="prepareResult" activiti:class="com.evolveum.midpoint.wf.impl.processes.itemApproval.PrepareResult" />
        <sequenceFlow sourceRef="prepareResult" targetRef="end"></sequenceFlow>

        <endEvent id="end" />
    </process>

</definitions>